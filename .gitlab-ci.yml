image:
  name: hashicorp/terraform:light
  entrypoint:
    - '/usr/bin/env'
    - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'

variables:
  TF_ROOT: ${CI_PROJECT_DIR}/terraform

cache:
  key: ${TF_ROOT}
  paths:
    - ${TF_ROOT}/.terraform/

before_script:
  - terraform --version
  - cd ${TF_ROOT}
  - mkdir -p ./creds
  - echo $GCP_SERVICE_ACCOUNT_KEY > ./creds/serviceaccount.json
  - if [[ $ENVIRONMENT == "dev" ]]; then sed -i "s/ENVIRONMENT/dev/" backend.tf ; fi
  - if [[ $ENVIRONMENT == "test" ]]; then sed -i "s/ENVIRONMENT/test/" backend.tf ; fi
  - if [[ $ENVIRONMENT == "prod" ]]; then sed -i "s/ENVIRONMENT/prod/" backend.tf ; fi
  - terraform init

stages:
  - # validate
  - # plan
  - apply

# ############### terraform validate #################
# .tf-validate:
#   stage: validate
#   script:
#     - terraform validate

# tf-validate-dev:
#   extends:
#     - .tf-validate
#   variables:
#     GCP_PROJECT_ID: ${GCP_PROJECT_DEV}
#     GCP_SERVICE_ACCOUNT_KEY: ${GCP_SERVICE_ACCOUNT_KEY_DEV}
#     ENVIRONMENT: "dev"
#   except:
#     - master
#     - /^release.*$/
#     - /^hotfix.*$/
#     - tags

# tf-validate-prod:
#   extends:
#     - .tf-validate
#   variables:
#     GCP_PROJECT_ID: ${ GCP_PROJECT_PROD}
#     GCP_SERVICE_ACCOUNT_KEY: ${GCP_SERVICE_ACCOUNT_KEY_PROD}
#     ENVIRONMENT: "prod"
#   only:
#     - master

# ############### terraform plan #################
# .tf-plan:
#   stage: plan
#   script:
#     - terraform plan -var-file=./${ENVIRONMENT}.tfvars
#   artifacts:
#     paths:
#       - ${TF_ROOT}/creds

# tf-plan-dev:
#   extends:
#     - .tf-plan
#   variables:
#     GCP_PROJECT_ID: ${GCP_PROJECT_DEV}
#     GCP_SERVICE_ACCOUNT_KEY: ${GCP_SERVICE_ACCOUNT_KEY_DEV}
#     ENVIRONMENT: "dev"
#   except:
#     - master
#     - /^release.*$/
#     - /^hotfix.*$/
#     - tags

# tf-plan-prod:
#   extends:
#     - .tf-plan
#   variables:
#     GCP_PROJECT_ID: ${GCP_PROJECT_PROD}
#     GCP_SERVICE_ACCOUNT_KEY: ${GCP_SERVICE_ACCOUNT_KEY_PROD}
#     ENVIRONMENT: "prod"
#   only:
#     - master

############### terraform apply #################
.tf-apply:
  stage: apply
  script:
    - terraform apply -var-file=./${ENVIRONMENT}.tfvars -auto-approve
  when: manual

tf-apply-dev:
  extends:
    - .tf-apply
  variables:
    GCP_PROJECT_ID: ${GCP_PROJECT_DEV}
    GCP_SERVICE_ACCOUNT_KEY: ${GCP_SERVICE_ACCOUNT_KEY_DEV}
    ENVIRONMENT: "dev"
  except:
    - master
    - /^release.*$/
    - /^hotfix.*$/
    - tags

tf-apply-prod:
  extends:
    - .tf-apply
  variables:
    GCP_PROJECT_ID: ${GCP_PROJECT_PROD}
    GCP_SERVICE_ACCOUNT_KEY: ${GCP_SERVICE_ACCOUNT_KEY_PROD}
    ENVIRONMENT: "prod"
  only:
    - master
